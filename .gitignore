# =============================================================================
# ENTERPRISE MONOREPO GITIGNORE - BULLETPROOF VERSION
# NextJS + Turbo + Playwright + Bun - Zero Build Artifacts
# =============================================================================

# ===== NODE.JS & PACKAGE MANAGERS =====

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*
bun-debug.log*

# Diagnostic reports
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory
coverage
*.lcov
.nyc_output
.c8_output/

# Dependency directories
node_modules/
jspm_packages/

# TypeScript cache and build info
*.tsbuildinfo
**/*.tsbuildinfo
tsconfig.tsbuildinfo

# Optional caches
.npm
.eslintcache
.stylelintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# dotenv environment variable files
.env
.env.*
!.env.example
!.env.template

# Environment leaks
.env.production.local
.env.development.local
.env.test.local

# Serverless directories
.serverless/

# yarn v3
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# ===== BUN PACKAGE MANAGER =====

# Bun cache and install directories
.bun/
bun.lockb.bak
node_modules/.cache/bun/

# Bun debug files
bun-debug-*.log
bun-error-*.log

# ===== TYPESCRIPT BUILD ARTIFACTS =====

# All TypeScript compilation outputs
*.js.map
*.d.ts.map
*.css.map
*.scss.map

# Generated declaration files (in build outputs only)
packages/*/dist/**/*.d.ts
packages/*/build/**/*.d.ts
apps/*/dist/**/*.d.ts
apps/*/.next/**/*.d.ts
tooling/*/dist/**/*.d.ts
tooling/*/build/**/*.d.ts

# But preserve source declaration files
!src/**/*.d.ts
!**/src/**/*.d.ts

# ===== NEXT.JS & REACT =====

# Next.js build output
.next
.next/cache
.next/server
.next/standalone
.next/static
.next/types/
out

# Bundle analysis
.next/analyze/
bundle-analyzer-report.html
.webpack-bundle-analyzer/

# ===== MONOREPO BUILD OUTPUTS =====

# Turbo build cache
.turbo/
**/.turbo/
turbo-*.log

# Build outputs - SPECIFIC PATHS TO AVOID SOURCE CODE
packages/*/dist/
packages/*/build/
packages/**/.next/
packages/*/out/

tooling/*/dist/
tooling/*/build/
tooling/**/.next/
tooling/*/out/

apps/*/dist/
apps/*/build/
apps/**/.next/
apps/*/out/

# Package-specific temporary files
packages/*/coverage/
packages/**/.nyc_output/
packages/*/node_modules/

tooling/*/coverage/
tooling/**/.nyc_output/
tooling/*/node_modules/

apps/*/coverage/
apps/**/.nyc_output/
apps/*/node_modules/

# ===== DEVELOPMENT ENVIRONMENT =====

# VS Code personal settings
.vscode/settings.json
.vscode/*.code-workspace
.vscode/.ropeproject/

# Modern IDEs
.idea/
.cursor/
cursor-tutor/

# Editor files
*.swp
*.swo
*.sublime-*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*~

# ===== TESTING & QA =====

# Test results
test-results/
test-results-*/
junit.xml
test-report.xml

# Playwright specific
playwright-report/
playwright/.cache/
playwright-results/
test-results.xml

# Lighthouse reports
lighthouse-report.*
lighthouse-ci/
web-vitals-report.json

# Visual regression testing
__screenshots__/
__image_snapshots__/

# ===== DATABASE & SERVICES =====

# Database files
*.sqlite
*.sqlite3
*.db
*.db-journal

# Redis dumps
dump.rdb

# Docker local overrides
docker-compose.override.yml
.docker/

# ===== SAAS & SECURITY =====

# Stripe CLI
stripe-webhook-events.log
stripe-events.json

# Auth & API secrets
auth-secrets.json
jwt-keys/
*.pem
*.crt
*.key
*-api-key.json
credentials.json
service-account-*.json

# User uploads
uploads/
storage/
public/uploads/
user-content/

# ===== DEPLOYMENT & CLOUD =====

# Vercel
.vercel

# Netlify
.netlify/

# AWS
.aws/

# Deployment configs
.deployment/
deploy-config.json
deployment-*.json
!deployment.template.json

# ===== MONITORING & LOGS =====

# Security scans
security-report.json
audit-results.json
vulnerability-report.json

# Certificates
certificates/
ssl/

# Secrets
.secrets/
secrets.json

# APM tools
newrelic_agent.log
datadog-*.log
sentry-debug-meta/

# ===== CACHE & PERFORMANCE =====

# Build cache
.build-cache/
.compile-cache/

# Asset optimization
.image-cache/
.sharp-cache/
.font-cache/

# Profiling
.prof/
profile-*.json
*.prof
heap-*.heapprofile
cpu-*.cpuprofile

# ===== CI/CD =====

# GitHub Actions local
.github/workflows/*.log
github-actions-*.log
action-artifacts/

# CI temporary
ci-temp/
deploy-temp/

# ===== WORKSPACE MANAGEMENT =====

# Package managers
.pnpm/
.yarn/cache
.yarn/unplugged

# Legacy lockfiles (keep only bun.lockb)
pnpm-lock.yaml
yarn.lock
package-lock.json

# Development logs
workspace-*.log
monorepo-*.temp
dev-server-*.log
webpack-dev-server.log

# Documentation builds
docs/build/
.docusaurus
storybook-static/
.storybook/build/

# ===== MISCELLANEOUS =====

# Backups
*.bak
*.backup
*-backup.*

# Archives (temporary)
*.zip
*.tar.gz
*.rar

# Generated files
CHANGELOG.temp.md
requirements-report.json
system-diagnostics.json

# =============================================================================
# VALIDATION: WHAT WE PRESERVE VS IGNORE
# =============================================================================

# ✅ PRESERVED (source code):
# - src/ folders (all source code)
# - lib/ folders inside src/ (utility source)
# - components/ (React components)
# - app/ directories (Next.js)
# - pages/ (Next.js pages)
# - public/ (static assets)
# - styles/ (CSS/SCSS)
# - *.config.js, *.config.ts (configs)
# - package.json (package configs)
# - tsconfig.json (TypeScript configs)
# - *.d.ts in src/ (type definitions)

# ❌ IGNORED (build outputs & sensitive):
# - dist/, build/, .next/ (compiled outputs)
# - *.js.map, *.d.ts.map (source maps)
# - node_modules/ (dependencies)
# - secrets, keys, credentials
# - logs, cache, temp files
# - personal IDE settings
# - build artifacts from TypeScript compilation

# Use: git check-ignore -v <file> to debug
