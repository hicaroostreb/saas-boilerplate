{
  "name": "@workspace/root",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "packageManager": "bun@1.1.38",
  "engines": {
    "node": ">=18.17.0",
    "bun": ">=1.0.0"
  },
  "workspaces": [
    "apps/*",
    "packages/*",
    "tooling/*"
  ],
  "scripts": {
    "dev": "turbo dev --parallel",
    "dev:marketing": "turbo dev --filter=@workspace/marketing",
    "dev:dashboard": "turbo dev --filter=@workspace/dashboard",
    "dev:apps": "turbo dev --filter='@workspace/marketing' --filter='@workspace/dashboard' --parallel",
    "build": "turbo build",
    "lint": "turbo lint",
    "lint:fix": "turbo lint -- --fix",
    "lint:check": "turbo lint -- --max-warnings 0",
    "lint:database": "echo '⚠️  Database lint disabled (contains generated code)'",
    "format": "turbo format",
    "format:check": "turbo format:check",
    "format:fix": "turbo format",
    "test": "turbo test",
    "typecheck": "turbo typecheck",
    "clean": "turbo clean",
    "clean:workspaces": "turbo run clean",
    "clean:validate": "test -f package.json && test -f bun.lockb && test -d apps && test -d packages || (echo '❌ ERRO: Execute este comando na RAIZ do monorepo' && exit 1)",
    "clean:safe-guard": "test \"$(basename \"$PWD\")\" != '/' && test \"$(basename \"$PWD\")\" != 'home' || (echo '❌ ERRO CRÍTICO: Diretório perigoso detectado!' && exit 1)",
    "clean:cache": "bun run clean:validate && bun run clean:cache:turbo && bun run clean:cache:next && bun run clean:cache:eslint && echo '✅ Cache limpo com sucesso'",
    "clean:cache:turbo": "test -d .turbo && rm -rf .turbo && echo '  🗑️  Deletado: .turbo/' || echo '  ⏭️  Pulado: .turbo/ (não existe)'",
    "clean:cache:next": "find apps -mindepth 2 -maxdepth 3 -type d -name 'cache' -path '*/.next/cache' 2>/dev/null | while read -r dir; do test -d \"$dir\" && rm -rf \"$dir\" && echo \"  🗑️  Deletado: $dir\"; done || true",
    "clean:cache:eslint": "find . -type f -name '.eslintcache' 2>/dev/null | while read -r file; do test -f \"$file\" && rm -f \"$file\" && echo \"  🗑️  Deletado: $file\"; done || true",
    "clean:outputs": "bun run clean:validate && bun run clean:outputs:next && bun run clean:outputs:dist && echo '✅ Outputs limpos com sucesso'",
    "clean:outputs:next": "find apps -mindepth 2 -maxdepth 2 -type d -name '.next' 2>/dev/null | while read -r dir; do test -d \"$dir\" && rm -rf \"$dir\" && echo \"  🗑️  Deletado: $dir\"; done || true",
    "clean:outputs:dist": "find packages -mindepth 2 -maxdepth 2 -type d -name 'dist' 2>/dev/null | while read -r dir; do test -d \"$dir\" && rm -rf \"$dir\" && echo \"  🗑️  Deletado: $dir\"; done || true",
    "clean:builds": "bun run clean:validate && echo '🧹 Limpando builds e cache...' && bun run clean:cache && bun run clean:outputs && echo '✅ Builds limpos com sucesso'",  
    "clean:deps": "bun run clean:validate && bun run clean:safe-guard && echo '⚠️  Deletando node_modules da RAIZ em 2 segundos...' && echo '   Tamanho atual:' && du -sh node_modules 2>/dev/null || echo '   (não existe)' && sleep 2 && test -d node_modules && rm -rf node_modules && echo '  🗑️  Deletado: node_modules/' || echo '  ⏭️  Pulado: node_modules/ (não existe)'",
    "reset": "bun run clean:deps && echo '' && echo '📦 Reinstalando dependências...' && bun install && echo '✅ Reset concluído'",
    "clean:deps:all": "bun run clean:validate && bun run clean:safe-guard && echo '🔥 ATENÇÃO: Deletando TODOS os node_modules' && echo '' && echo '📊 Tamanhos atuais:' && echo '   Raiz:' && du -sh node_modules 2>/dev/null || echo '     (não existe)' && echo '   Workspaces:' && find apps packages tooling -mindepth 2 -maxdepth 2 -type d -name 'node_modules' -exec du -sh {} \\; 2>/dev/null || echo '     (nenhum)' && echo '' && echo '⏸️  Pressione Ctrl+C nos próximos 3 segundos para CANCELAR...' && sleep 3 && echo '' && echo '🗑️  Deletando...' && test -d node_modules && rm -rf node_modules && echo '  ✓ Raiz limpa' || echo '  ⏭️  Raiz já estava limpa' && find apps packages tooling -mindepth 2 -maxdepth 2 -type d -name 'node_modules' 2>/dev/null | while read -r dir; do test -d \"$dir\" && rm -rf \"$dir\" && echo \"  ✓ Deletado: $dir\"; done && echo '✅ Todos node_modules deletados'",
    "reset:full": "bun run clean:builds && bun run clean:deps:all && echo '' && echo '📦 Reinstalando TUDO do zero...' && bun install && echo '✅ Reset completo concluído'",    
    "reset:nuclear:confirm": "bun run clean:validate && bun run clean:safe-guard && echo '☢️  OPERAÇÃO NUCLEAR DETECTADA' && echo '' && echo '📋 O seguinte será PERMANENTEMENTE deletado:' && echo '' && bun run clean:dry-run && echo '' && echo '⚠️  ESTA OPERAÇÃO É IRREVERSÍVEL!' && echo '⚠️  Certifique-se de ter commit/backup!' && echo '' && echo '⏸️  Pressione Ctrl+C nos próximos 5 segundos para CANCELAR...' && sleep 5",
    "reset:nuclear": "bun run reset:nuclear:confirm && echo '' && echo '🗑️  Executando limpeza nuclear...' && echo '' && test -d .turbo && rm -rf .turbo && echo '  ✓ Cache Turbo deletado' || echo '  ⏭️  Cache Turbo não existe' && find apps -mindepth 2 -maxdepth 2 -type d -name '.next' 2>/dev/null | while read -r dir; do test -d \"$dir\" && rm -rf \"$dir\" && echo \"  ✓ Deletado: $dir\"; done && find packages -mindepth 2 -maxdepth 2 -type d -name 'dist' 2>/dev/null | while read -r dir; do test -d \"$dir\" && rm -rf \"$dir\" && echo \"  ✓ Deletado: $dir\"; done && test -d node_modules && rm -rf node_modules && echo '  ✓ node_modules raiz deletado' || echo '  ⏭️  node_modules raiz não existe' && find apps packages tooling -mindepth 2 -maxdepth 2 -type d -name 'node_modules' 2>/dev/null | while read -r dir; do test -d \"$dir\" && rm -rf \"$dir\" && echo \"  ✓ Deletado: $dir\"; done && test -f bun.lockb && rm -f bun.lockb && echo '  ✓ bun.lockb deletado' || echo '  ⏭️  bun.lockb não existe' && echo '' && echo '📦 Reinstalando do zero...' && bun install && echo '' && echo '✅ Operação nuclear concluída com sucesso!'",    
    "clean:check": "bun run clean:validate && echo '📊 ANÁLISE DE LIMPEZA DISPONÍVEL' && echo '' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '🗂️  Cache Turbo (.turbo/)' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && du -sh .turbo 2>/dev/null || echo '  ✓ Limpo (0 bytes)' && echo '' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '📦 node_modules (raiz)' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && du -sh node_modules 2>/dev/null || echo '  ✓ Não existe (0 bytes)' && echo '' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '🏗️  Builds Next.js (apps/*/.next/)' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && find apps -mindepth 2 -maxdepth 2 -type d -name '.next' -exec du -sh {} \\; 2>/dev/null || echo '  ✓ Limpo (0 bytes)' && echo '' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '📦 Builds Packages (packages/*/dist/)' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && find packages -mindepth 2 -maxdepth 2 -type d -name 'dist' -exec du -sh {} \\; 2>/dev/null || echo '  ✓ Limpo (0 bytes)' && echo '' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '📦 node_modules (workspaces)' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && find apps packages tooling -mindepth 2 -maxdepth 2 -type d -name 'node_modules' -exec du -sh {} \\; 2>/dev/null || echo '  ✓ Limpo (0 bytes)' && echo '' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '' && echo '💡 Use: bun run clean:dry-run para ver o que seria deletado'", 
    "clean:dry-run": "bun run clean:validate && echo '🔍 SIMULAÇÃO DE LIMPEZA (nada será deletado)' && echo '' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo 'O seguinte SERIA deletado:' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '' && echo '📁 Cache Turbo:' && test -d .turbo && echo '  ✓ .turbo/ (será deletado)' || echo '  ⏭️  .turbo/ (não existe)' && echo '' && echo '📁 Builds Next.js:' && find apps -mindepth 2 -maxdepth 2 -type d -name '.next' 2>/dev/null | while read -r dir; do echo \"  ✓ $dir (será deletado)\"; done && (find apps -mindepth 2 -maxdepth 2 -type d -name '.next' -print -quit 2>/dev/null | grep -q . || echo '  ⏭️  Nenhum build encontrado') && echo '' && echo '📁 Builds Packages:' && find packages -mindepth 2 -maxdepth 2 -type d -name 'dist' 2>/dev/null | while read -r dir; do echo \"  ✓ $dir (será deletado)\"; done && (find packages -mindepth 2 -maxdepth 2 -type d -name 'dist' -print -quit 2>/dev/null | grep -q . || echo '  ⏭️  Nenhum build encontrado') && echo '' && echo '📁 ESLint cache:' && find . -type f -name '.eslintcache' 2>/dev/null | while read -r file; do echo \"  ✓ $file (será deletado)\"; done && (find . -type f -name '.eslintcache' -print -quit 2>/dev/null | grep -q . || echo '  ⏭️  Nenhum cache encontrado') && echo '' && echo '📁 node_modules (raiz):' && test -d node_modules && echo '  ✓ node_modules/ (será deletado)' || echo '  ⏭️  node_modules/ (não existe)' && echo '' && echo '📁 node_modules (workspaces):' && find apps packages tooling -mindepth 2 -maxdepth 2 -type d -name 'node_modules' 2>/dev/null | while read -r dir; do echo \"  ✓ $dir (será deletado)\"; done && (find apps packages tooling -mindepth 2 -maxdepth 2 -type d -name 'node_modules' -print -quit 2>/dev/null | grep -q . || echo '  ⏭️  Nenhum encontrado') && echo '' && echo '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━' && echo '' && echo '💡 Para executar a limpeza, use os comandos clean:*'",
    "reset:cache": "bun run clean:cache && turbo build --force",
    "reset:builds": "bun run clean:builds && turbo build",
    "check:requirements": "echo '⚠️ Requirements check disabled temporarily'",
    "check:requirements:verbose": "echo '⚠️ Requirements check disabled temporarily'",
    "check:requirements:strict": "echo '⚠️ Requirements check disabled temporarily'",
    "check:env": "bun run check:requirements",
    "preinstall": "echo '✅ Preinstall check disabled during migration' || true",
    "db:setup": "echo '⚠️ Database setup disabled - restore files first'",
    "db:migrate": "bun run --filter @workspace/database db:migrate",
    "db:seed": "bun run --filter @workspace/database db:seed",
    "db:studio": "bun run --filter @workspace/database db:studio",
    "db:push": "bun run --filter @workspace/database db:push",
    "db:generate": "bun run --filter @workspace/database db:generate",
    "db:reset": "bun run --filter @workspace/database db:reset",
    "db:drop": "bun run --filter @workspace/database db:drop",
    "db:lint:why": "echo '💡 Database package excluded from lint due to generated code, migrations, and seed scripts'",
    "setup": "echo '⚠️ Setup disabled - restore files first'",
    "setup:full": "echo '⚠️ Setup disabled - restore files first'",
    "test-auth": "bun run dev:dashboard",
    "changeset": "changeset",
    "version-packages": "changeset version",
    "release": "bun run build && changeset publish",
    "deps:check": "bun outdated --recursive",
    "deps:update": "bun update --recursive --latest",
    "test:e2e": "bun run --filter @workspace/e2e test",
    "test:e2e:ui": "bun run --filter @workspace/e2e test:ui",
    "test:auth": "bun run --filter @workspace/e2e test:auth",
    "test:smoke": "bun run --filter @workspace/e2e test:smoke",
    "test:install": "bun run --filter @workspace/e2e install:browsers",
    "qa:fast": "turbo format && turbo lint",
    "qa:build": "bun run qa:fast && bun run typecheck && bun run build",
    "qa:full": "bun run qa:build && bun run test:e2e",
    "qa:security": "bun pm audit --audit-level moderate",
    "qa:fix": "turbo format && turbo lint:fix",
    "predev": "bun run check:requirements",
    "pretest:e2e": "bun run qa:build",
    "prepare": "husky",
    "rate-limiter:build": "turbo run build --filter=@workspace/rate-limiter",
    "rate-limiter:dev": "turbo run dev --filter=@workspace/rate-limiter",
    "rate-limiter:test": "turbo run test --filter=@workspace/rate-limiter",
    "rate-limiter:lint": "turbo run lint --filter=@workspace/rate-limiter",
    "rate-limiter:typecheck": "turbo run typecheck --filter=@workspace/rate-limiter"
  },
  "lint-staged": {
    "**/*.{ts,tsx,js,jsx}": [
      "prettier --write",
      "eslint --fix --max-warnings=0 --no-warn-ignored"
    ],
    "**/*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "@auth/drizzle-adapter": "^1.10.0",
    "@supabase/supabase-js": "^2.74.0",
    "bcryptjs": "^3.0.2",
    "clsx": "^2.1.1",
    "dotenv": "^17.2.3",
    "drizzle-orm": "^0.44.6",
    "ioredis": "^5.8.1",
    "jose": "^6.1.0",
    "next": "^15.5.4",
    "next-auth": "5.0.0-beta.25",
    "next-safe-action": "^7.10.8",
    "nuqs": "^2.7.1",
    "postgres": "^3.4.7",
    "stripe": "^12.18.0",
    "tailwind-merge": "^2.6.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@changesets/cli": "^2.29.7",
    "@eslint/js": "^9.37.0",
    "@next/eslint-plugin-next": "^15.5.4",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.19",
    "@types/bcryptjs": "^2.4.6",
    "@types/node": "^20.19.19",
    "@types/pg": "^8.15.5",
    "@types/stripe-v2": "^2.0.6",
    "@typescript-eslint/eslint-plugin": "^8.46.1",
    "@typescript-eslint/parser": "^8.46.1",
    "autoprefixer": "^10.4.21",
    "chalk": "^5.6.2",
    "drizzle-kit": "^0.31.5",
    "eslint": "^9.37.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^15.5.2",
    "pg": "^8.16.3",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "prettier-plugin-organize-imports": "^4.3.0",
    "prettier-plugin-tailwindcss": "^0.5.14",
    "semver": "^7.7.3",
    "tailwindcss": "^3.4.18",
    "tailwindcss-animate": "^1.0.7",
    "tsx": "^4.20.6",
    "turbo": "^2.5.8",
    "typescript": "^5.9.3",
    "typescript-eslint": "^8.46.0",
    "which": "^4.0.0"
  },
  "trustedDependencies": [
    "@biomejs/biome",
    "esbuild",
    "sharp",
    "turbo"
  ],
  "browserslist": [
    "defaults",
    "not IE 11",
    "not op_mini all"
  ]
}
